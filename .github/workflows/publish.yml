name: Publish

on:
  push:
    tags:
      - "v**"

jobs:

  publish-github:
    if: ${{ github.repository == 'zepinglee/citeproc-lua' }}
    name: Create GitHub release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract release notes
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v2

      - name: Create GitHub release
        uses: ncipollo/release-action@v1
        with:
          body: ${{ steps.extract-release-notes.outputs.release_notes }}


  publish-luarocks:
    if: ${{ github.repository == 'zepinglee/citeproc-lua' }}
    name: Publish to LuaRocks
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Lua
        uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: "5.3"

      - name: Set up LuaRocks
        uses: leafo/gh-actions-luarocks@v4

      - name: Set up dependencies
        run: luarocks install dkjson

      - name: Parse semver string
        id: semver
        uses: booxmedialtd/ws-action-parse-semver@v1
        with:
          input_string: ${{ github.ref }}
          version_extractor_regex: '\/v(.*)$'


      - name: Make rockspec of new version
        run: luarocks new_version --tag ${{ github.ref_name }}

      - name: Upload to LuaRocks
        run: luarocks upload --temp-key ${{ secrets.LUAROCKS_API_KEY }} citeproc-lua-${{ steps.semver.outputs.fullversion }}-1.rockspec


  publish-ctan:
    if: ${{ github.repository == 'zepinglee/citeproc-lua' }}
    name: Publish to CTAN
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up TeX Live
        uses: zauguin/install-texlive@v3
        with:
          package_file: .github/tl_packages

      # - name: Set up TeX Live
      #   uses: teatimeguest/setup-texlive-action@v2
      #   with:
      #     package-file: .github/tl_packages
      #     update-all-packages: true

      - name: Create CTAN archive
        run: l3build ctan

      - name: Parse semver string
        id: semver
        uses: booxmedialtd/ws-action-parse-semver@v1
        with:
          input_string: ${{ github.ref }}
          version_extractor_regex: '\/v(.*)$'

      - name: Extract release notes
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v2
        with:
          release_notes_file: RELEASE_NOTES.md

      - name: Upload to CTAN with announcements
        if: ${{ steps.semver.outputs.patch == '0' }}
        run: echo "y" | l3build upload --email ${{ secrets.CTAN_EMAIL }} --file RELEASE_NOTES.md ${{ steps.semver.outputs.fullversion }}

      - name: Upload to CTAN without announcements (patch version)
        if: ${{ steps.semver.outputs.patch != '0' }}
        run: echo "y" | l3build upload --email ${{ secrets.CTAN_EMAIL }} --message "" ${{ steps.semver.outputs.fullversion }}

      # # This action doesn't have announcement text
      # - name: Submit to CTAN (update)
      #   uses: paolobrasolin/ctan-submit-action@v1
      #   with:
      #     action: upload
      #     file_path: citation-style-language-ctan.zip
      #     fields: |
      #       update: "true"
      #       pkg: citation-style-language
      #       version: ${{ steps.semver.outputs.fullversion }}
      #       uploader: ${{ secrets.CTAN_UPLOADER }}
      #       email: ${{ secrets.CTAN_EMAIL }}
